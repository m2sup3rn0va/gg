#! /bin/bash

case $1 in
	list)
		case $2 in
			shell)
				tput reset clear
				printf "[+] GitGun(gg) - Available Shell Scripts\n" | lolcat
				echo -e "----------------------------------------\n" | lolcat
				printf "shell\n"
				printf "zsh\n"
			;;

			tools)
				tput reset clear
				net_temp=$(mktemp)
				web_temp=$(mktemp)

				cat $HOME/.gg/gg.json | jq '.tools[].network[] | keys[]' | tr -d '"' | grep -v all > $net_temp
				cat $HOME/.gg/gg.json | jq '.tools[].web[] | keys[]' | tr -d '"' | grep -v all > $web_temp

				printf "[+] GitGun(gg) - Available Tools\n" | lolcat
				echo -e "-------------------------------\n" | lolcat
				cat $net_temp $web_temp

				rm -rf $net_temp $web_temp
				unset net_temp web_temp
			;;
		esac
	;;

	install)
		case $2 in
			shell)
				curl -s $(cat $HOME/.gg/gg.json | jq '.shell[].shell' | tr -d '"') | bash
			;;

			zsh)
				curl -s $(cat $HOME/.gg/gg.json | jq '.shell[].zsh' | tr -d '"') | bash
			;;

			nmap)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].nmap' | tr -d '"') | bash
			;;

			crackmapexec)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].crackmapexec' | tr -d '"') | bash
			;;

			dsniff)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].dsniff' | tr -d '"') | bash
			;;

			enum4linux)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].enum4linux' | tr -d '"') | bash
			;;

			evil_winrm)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].evil_winrm' | tr -d '"') | bash
			;;

			impacket)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].impacket' | tr -d '"') | bash
			;;

			msfconsole)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].msfconsole' | tr -d '"') | bash
			;;

			responder)
				curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].responder' | tr -d '"') | bash
			;;

			all)
				case $3 in
					network)
						curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].network[].all' | tr -d '"') | bash
						printf "\n[+] Installation Successful - All Network Tools\n" | lolcat
					;;

					web)
						curl -s $(cat $HOME/.gg/gg.json | jq '.tools[].web[].all' | tr -d '"') | bash
						printf "\n[+] Installation Successful - All Web Tools\n" | lolcat
					;;
					*)
						printf "[+] Installation Candidate - Not Found...\n" | lolcat
						exit 1
					;;
				esac
			;;

			*)
				printf "[+] Installation Candidate - Not Found...\n" | lolcat
				printf "[+] Install tools from 'gg list' using 'gg install <TOOL_NAME>'...\n" | lolcat
				printf "[+] You can also use 'gg install all network' or 'gg install all web'...\n" | lolcat
				exit 1
			;;
		esac
	;;

	update)
		tput reset clear

		case $2 in
			tools)
				printf "[+] Updating Installed GitGun Tools\n" | lolcat
				echo -e "-----------------------------------\n" | lolcat

				printf "[+] Updating Installed Network Tools\n" | lolcat
				[ -s $HOME/.gg/update-cache/gg_network.list ] && cat $HOME/.gg/update-cache/gg_network.list | xargs -I{} bash -c 'printf "[+] Updating {}\n" | lolcat; \
				curl -s $(cat $HOME/.gg/gg.json | jq ".tools[].network[].{}" | tr -d "\"") | bash; \
				printf "\n"'

				printf "[+] Updating Installed Web Tools\n" | lolcat
				[ -s $HOME/.gg/update-cache/gg_web.list ] && cat $HOME/.gg/update-cache/gg_web.list | xargs -I{} bash -c 'printf "[+] Updating {}\n" | lolcat; \
				curl -s $(cat $HOME/.gg/gg.json | jq ".tools[].web[].{}" | tr -d "\"") | bash; \
				printf "\n"'
			;;

			shell)
				printf "[+] Updating GitGun Shell Profile\n" | lolcat
				echo -e "---------------------------------\n" | lolcat

				wget -q https://raw.githubusercontent.com/m2sup3rn0va/gg/main/ggs/shell/bash_profile -O $HOME/.bash_profile

				printf "[+] Updated GitGun Shell Profile\n" | lolcat
			;;

			*)
				printf "[+] No Updating Candidate Found...\n" | lolcat
				printf "[+] Only two options available - 'gg update tools' or 'gg update shell'\n" | lolcat
				exit 1
			;;
		esac
	;;

	help|*)
		tput reset clear
        printf "WELCOME TO GITGUN(gg) - THE TOOLKIT MANAGER\n\
-------------------------------------------\n\n\
A toolkit manager to install most used penetration testing\n\
tools with least effort. It also includes custom shell scripts\n\
for '.bashrc' and '.zshrc'.\n\n\
[+] Syntax: gg <OPTIONS> <TOOL_NAME>\n\n\
[+] Options:\n\
------------\n\n\
[>] help - Offers this page\n\
---------------------------\n\n\
[>] list - Lists all available tools\n\
 [>] shell - Lists 'shell' commands available to install\n\
 [>] tools - Lists 'tools' commands available to install\n\
--------------------------------------------------------\n\n\
[>] install - Install the tools\n\
 [>] all - Install all the tools available\n\
  [>] network - Install all the network tools available\n\
  [>] web - Install all the web tools available\n\
 [>] You can 'install' tools individually as well from\n\
 [>] 'gg list tools' or 'gg list shell'\n\
-------------------------------------------------------\n\n\
[>] update - To update installed tools\n\
 [>] tools - Updates all the installed tools\n\
 [>] shell - Updates the local 'bash_profile' to the latest one\n\
---------------------------------------------------------------\n\n\
[+] Examples:\n\
 [>] 'gg list tools' - List all the tools available to install\n\
 [>] 'gg list shell' - List all the shell scripts available to install\n\
 [>] 'gg install shell' - Install My Custom Shell Scripts\n\
 [>] 'gg install zsh' - Install Oh-My-ZSH Theme on My Custom Shell\n\
 [>] 'gg install nmap' - Installs 'nmap' from 'gg list tools'\n\
 [>] 'gg install all network' - Installs all the network tools available in 'gg list tools'\n\
 [>] 'gg install all web' - Installs all the web tools available in 'gg list tools'\n\
 [>] 'gg update shell' - Updates my local bash_profile to recent one\n\
 [>] 'gg update tools' - Updates all the installed tools\n\n\
 To help, do reach out to me on 'Mr. Sup3rN0vaa <m2sup3rn0va@gmail.com>'
\n" | lolcat
	;;
esac